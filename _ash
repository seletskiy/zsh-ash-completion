#compdef ash

function _ash() {
    args=(
        '(-h --help)'{-h,--help}'[display help]'
        '-v[display version]'
        '(-u- --username=)'{-u-,--username=}'[Stash username]'
        '(-p- --pass=)'{-p-,--pass=}'[Stash password]'
        '-w[ignore whitespaces in review diffs]'
        '-e-[editor to use, by default '$EDITOR']'
        '--host=[Stash hostname]'
        '-l-[limit activities in overview]'
        '1:review:_ash_inbox'
    )

    case "${words[2]}" in
        inbox)
            args+=(
                '-d[show descriptions for PRs]'
                '2:who:(reviewer author all)'
            )
            ;;
        *)
            args+=(
                '2:action:(review ls approve decline ls-reviews)'
            )
            ;;
    esac

    case "${words[3]}" in
        review)
            args+=(
                '3:filename:_ash_review'
            )
            ;;
        ls-reviews)
            args+=(
                '-d[show descriptions for PRs]'
                '3:what:(open merged declined)'
            )
    esac

    _arguments -s "$args[@]"
}

function _update_cache_async() {
    reviews=$(ash inbox)

    _store_cache _ash_inbox reviews
}

function _ash_inbox() {
    if ! _retrieve_cache _ash_inbox reviews; then
        reviews=$(ash inbox)
    fi

    ( _update_cache_async & ) &>/dev/null

    descriptions=()

    IFS=$'\n'
    while read line; do
        pull_request=$(awk '{print $1}' <<< "$line")
        description=$(sed -re 's/^\S+\s+//' <<< "$line" | sed -r 's/:/\\&/g')
        descriptions+="$pull_request:$description"
    done <<< "$reviews"

    _describe -V "open reviews in your inbox" descriptions
    _arguments '1:action:(inbox)'
}

function _ash_review() {
    review="${words[2]}"
    files=()

    for word in $(ash "$review" ls | awk '{print $2}'); do
        files+=($word)
    done

    compadd -V $files
}

_ash "${@}"
